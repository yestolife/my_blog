{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{372:function(e,t,r){\"use strict\";r.r(t);var s=r(43),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[r(\"p\",[e._v(\"Algorithm做算法题，Review点评英文文章，Tip总结技术技巧，Share做技术分享。每周打卡一次，这就是ARTS打卡。\")]),e._v(\" \"),r(\"h1\",{attrs:{id:\"_1-做算法题\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-做算法题\"}},[e._v(\"#\")]),e._v(\" 1. 做算法题\")]),e._v(\" \"),r(\"h4\",{attrs:{id:\"leetcode1221-分割平衡字符串\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#leetcode1221-分割平衡字符串\"}},[e._v(\"#\")]),e._v(\" Leetcode\"),r(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/split-a-string-in-balanced-strings/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"1221. 分割平衡字符串\"),r(\"OutboundLink\")],1)]),e._v(\" \"),r(\"p\",[e._v(\"题目：\\n在一个「平衡字符串」中，'L' 和 'R' 字符的数量是相同的。\")]),e._v(\" \"),r(\"p\",[e._v(\"给出一个平衡字符串 \"),r(\"code\",[e._v(\"s\")]),e._v(\"，请你将它分割成尽可能多的平衡字符串。\")]),e._v(\" \"),r(\"p\",[e._v(\"返回可以通过分割得到的平衡字符串的最大数量**。**\")]),e._v(\" \"),r(\"p\",[r(\"strong\",[e._v(\"示例 ：\")])]),e._v(\" \"),r(\"div\",{staticClass:\"language- line-numbers-mode\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[e._v('输入：s = \"RLRRLLRLRL\"\\n输出：4\\n解释：s 可以分割为 \"RL\", \"RRLL\", \"RL\", \"RL\", 每个子字符串中都包含相同数量的 \\'L\\' 和 \\'R\\'。\\n')])]),e._v(\" \"),r(\"div\",{staticClass:\"line-numbers-wrapper\"},[r(\"span\",{staticClass:\"line-number\"},[e._v(\"1\")]),r(\"br\"),r(\"span\",{staticClass:\"line-number\"},[e._v(\"2\")]),r(\"br\"),r(\"span\",{staticClass:\"line-number\"},[e._v(\"3\")]),r(\"br\")])]),r(\"p\",[e._v(\"解题思路：把R转换为+1，L转换为-1，依次遍历字符串，并同时累加转换数字的值。累加得到0的次数就是分割平衡字符串的数量。\")]),e._v(\" \"),r(\"p\",[e._v(\"解题代码：\")]),e._v(\" \"),r(\"div\",{staticClass:\"language- line-numbers-mode\"},[r(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[r(\"code\",[e._v(\"class Solution:\\n    def balancedStringSplit(self, s: str) -> int:\\n        num_balance = 0\\n        num_temp = 0\\n        for c in s:\\n            if c is 'R':\\n                num_temp += 1\\n            if c is 'L':\\n                num_temp -= 1\\n            if num_temp == 0:\\n                num_balance += 1\\n        return num_balance\\n\")])]),e._v(\" \"),r(\"div\",{staticClass:\"line-numbers-wrapper\"},[r(\"span\",{staticClass:\"line-number\"},[e._v(\"1\")]),r(\"br\"),r(\"span\",{staticClass:\"line-number\"},[e._v(\"2\")]),r(\"br\"),r(\"span\",{staticClass:\"line-number\"},[e._v(\"3\")]),r(\"br\"),r(\"span\",{staticClass:\"line-number\"},[e._v(\"4\")]),r(\"br\"),r(\"span\",{staticClass:\"line-number\"},[e._v(\"5\")]),r(\"br\"),r(\"span\",{staticClass:\"line-number\"},[e._v(\"6\")]),r(\"br\"),r(\"span\",{staticClass:\"line-number\"},[e._v(\"7\")]),r(\"br\"),r(\"span\",{staticClass:\"line-number\"},[e._v(\"8\")]),r(\"br\"),r(\"span\",{staticClass:\"line-number\"},[e._v(\"9\")]),r(\"br\"),r(\"span\",{staticClass:\"line-number\"},[e._v(\"10\")]),r(\"br\"),r(\"span\",{staticClass:\"line-number\"},[e._v(\"11\")]),r(\"br\"),r(\"span\",{staticClass:\"line-number\"},[e._v(\"12\")]),r(\"br\")])]),r(\"h1\",{attrs:{id:\"_2-点评英文文章\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-点评英文文章\"}},[e._v(\"#\")]),e._v(\" 2.点评英文文章\")]),e._v(\" \"),r(\"p\",[r(\"a\",{attrs:{href:\"https://github.blog/2020-04-09-github-protips-tips-tricks-hacks-and-secrets-from-lee-reilly/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"文章GitHub Protips: Tips, tricks, hacks, and secrets from Lee Reilly\"),r(\"OutboundLink\")],1),e._v(\"，写了一些GitHub上的使用技巧，有些是企业版GitHub使用，有些是安装插件后使用，还有一些隐藏的实用技巧。例如：在任何代码仓库位置输入字母\"),r(\"code\",[e._v(\"t\")]),e._v(\"就可以进行模糊查找代码中的内容。点击代码边的行号可以复制或引用该行代码。GitHub对Markdown语法做了一些扩充，如代码折叠、现实十六进值颜色、添加图标等。文中还有一个只有程序员看得懂的笑话：\")]),e._v(\" \"),r(\"blockquote\",[r(\"p\",[e._v(\"Most software engineers prefer to use dark mode because, wait for it… \"),r(\"em\",[e._v(\"light attracts more bugs\")]),e._v(\".\")])]),e._v(\" \"),r(\"h1\",{attrs:{id:\"_3-技术技巧\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-技术技巧\"}},[e._v(\"#\")]),e._v(\" 3. 技术技巧\")]),e._v(\" \"),r(\"p\",[e._v(\"http协议已经在web世界快要销声匿迹了，取而代之的是更加的 https。把网站升级为https可参考\"),r(\"a\",{attrs:{href:\"http://www.ruanyifeng.com/blog/2016/08/migrate-from-http-to-https.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"阮一峰的文章\"),r(\"OutboundLink\")],1),e._v(\"。不知道为啥，阮的博客自己还是http的。\")]),e._v(\" \"),r(\"h1\",{attrs:{id:\"_4-技术分享\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-技术分享\"}},[e._v(\"#\")]),e._v(\" 4. 技术分享\")]),e._v(\" \"),r(\"p\",[e._v(\"反向代理是常用的web技术，简单来说是代理将服务器集群对客户端屏蔽，客户端只要访问一个url，后面提供服务的是集群中的某一台服务器。反向代理有什么用处呢，可以实现负载均衡，分布式部署，甚至翻越大山。例如，在“外网”服务器上部署反向代理服务，代理指向古哥。在内网只要访问外网服务器的域名，就能实现访问古哥。能提供反向代理服务的组件很多，如\"),r(\"a\",{attrs:{href:\"https://fuckcloudnative.io/posts/use-envoy-proxy-access-google/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Envoy\"),r(\"OutboundLink\")],1),e._v(\"，\"),r(\"a\",{attrs:{href:\"https://zhgcao.github.io/2016/06/09/nginx-reverse-proxy-google/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Nginx\"),r(\"OutboundLink\")],1),e._v(\"，\"),r(\"a\",{attrs:{href:\"https://ichon.me/post/1027.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Caddy\"),r(\"OutboundLink\")],1),e._v(\"。Envoy是云原生的代理服务，用docker部署很方便，就是docker镜像拉去太慢了。国内有一些镜像源服务，如\"),r(\"a\",{attrs:{href:\"https://hub.daocloud.io/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Daocloud\"),r(\"OutboundLink\")],1),e._v(\"，可惜搜索不到Envoy。Nginx是目前常用的中间件，代理过程需要重新编译Nginx，比较复杂，但很容易搜到相关操作方法。Caddy是一个轻量级中间件，两行命令就能实现反向代理，还可以自动生成证书，但用的人少。网上很多教程是基于v1版本的，如果用v2版本，可参考\"),r(\"a\",{attrs:{href:\"https://caddyserver.com/docs/v2-upgrade\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"Caddy官网版本更新说明\"),r(\"OutboundLink\")],1),e._v(\"，转换v1配置到v2。\")])])}),[],!1,null,null,null);t.default=n.exports}}]);","extractedComments":[]}