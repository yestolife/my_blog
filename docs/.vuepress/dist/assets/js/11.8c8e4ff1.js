(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{356:function(n,e,s){"use strict";s.r(e);var t=s(43),a=Object(t.a)({},(function(){var n=this,e=n.$createElement,s=n._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("p",[n._v("Algorithm做算法题，Review点评英文文章，Tip总结技术技巧，Share做技术分享。每周打卡一次，这就是ARTS打卡。")]),n._v(" "),s("h1",{attrs:{id:"_1-做算法题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-做算法题"}},[n._v("#")]),n._v(" 1. 做算法题")]),n._v(" "),s("h4",{attrs:{id:"leetcode3-无重复字符的最长子串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#leetcode3-无重复字符的最长子串"}},[n._v("#")]),n._v(" "),s("a",{attrs:{href:"https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/",target:"_blank",rel:"noopener noreferrer"}},[n._v("Leetcode3. 无重复字符的最长子串"),s("OutboundLink")],1)]),n._v(" "),s("p",[s("strong",[n._v("题目描述")]),n._v("：")]),n._v(" "),s("blockquote",[s("p",[n._v("给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。")])]),n._v(" "),s("p",[s("strong",[n._v("示例")]),n._v(" :")]),n._v(" "),s("blockquote",[s("p",[n._v('输入: "abcabcbb"\n输出: 3\n解释: 因为无重复字符的最长子串是 "abc"，所以其长度为 3。')]),n._v(" "),s("p",[n._v('输入: "bbbbb"\n输出: 1\n解释: 因为无重复字符的最长子串是 "b"，所以其长度为 1。')]),n._v(" "),s("p",[n._v('输入: "pwwkew"\n输出: 3\n解释: 因为无重复字符的最长子串是 "wke"，所以其长度为 3。请注意，你的答案必须是 '),s("strong",[n._v("子串")]),n._v(' 的长度，"pwke" 是一个子序列，不是子串。')])]),n._v(" "),s("p",[s("strong",[n._v("解题思路")]),n._v("：为了找到最长的无重复字串，最直接的想法就是以每个字符为起点遍历下去，查看是否出现重复字符。双重循环，时间复杂度O(n^2)，未增加额外空间，空间复杂度O(1)。实现为下面代码1，这时间复杂度太高了，在leetcode中执行超时。有能够压缩时间的地方吗？利用set取代list，由于set底层是用hash表存储，查询速度比list快，不过增加了存储set的空间。实现为下面代码2，时间复杂度为O(n)，空间复杂度为O(len_max)。")]),n._v(" "),s("p",[s("strong",[n._v("解题代码1")]),n._v("：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("class Solution:\n    def lengthOfLongestSubstring(self, s: str) -> int:\n        n = len(s)\n        i, j = 0, 1\n        len_max = 0\n        while j < n:\n            if s[j] not in s[i:j]:\n                len_max = max(len_max, j-i+1)\n                j += 1\n            else:\n                i += 1\n        return len_max\n            \n\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br")])]),s("p",[s("strong",[n._v("解题代码2")]),n._v("：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("class Solution:\n    def lengthOfLongestSubstring(self, s: str) -> int:\n        n = len(s)\n        i, j = 0, 0\n        len_max = 0\n        s_set = set()\n        while j < n:\n            if s[j] not in s_set:\n                s_set.add(s[j])\n                len_max = max(len_max, j-i+1)\n                j += 1\n            else:\n                s_set.remove(s[i])\n                i += 1\n        return len_max\n            \n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br")])]),s("h1",{attrs:{id:"_2-点评英文文章"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-点评英文文章"}},[n._v("#")]),n._v(" 2.点评英文文章")]),n._v(" "),s("p",[n._v("文章"),s("a",{attrs:{href:"https://www.theverge.com/2020/5/22/21266251/nvidia-ai-gamegan-recreate-pac-man-virutal-environment",target:"_blank",rel:"noopener noreferrer"}},[n._v("Nvidia’s AI recreates Pac-Man from scratch just by watching it being played"),s("OutboundLink")],1),n._v("，介绍了英伟达最近的AI成果，通过AI观看吃豆人游戏，AI自己做出同样的游戏。也就是说AI能自己编程，未来这要抢走多少程序员的饭碗。")]),n._v(" "),s("h1",{attrs:{id:"_3-技术技巧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-技术技巧"}},[n._v("#")]),n._v(" 3. 技术技巧")]),n._v(" "),s("p",[n._v("使用markdown写笔记中经常需要插入图片，如果把图片存储在本地，在其他平台就不能正常展示。图床是一类存储图片的服务器。把图片存储在图床上，通过url访问图片资源。这就可以解决markdown图片存储和显示的问题。可利用"),s("a",{attrs:{href:"https://github.com/Molunerfinn/PicGo",target:"_blank",rel:"noopener noreferrer"}},[n._v("PicGo"),s("OutboundLink")],1),n._v("+Github构建图床，参考"),s("a",{attrs:{href:"https://juejin.im/entry/5c4ec5aaf265da614420689f",target:"_blank",rel:"noopener noreferrer"}},[n._v("此文"),s("OutboundLink")],1),n._v("。如果github图片显示不了，参考"),s("a",{attrs:{href:"https://blog.csdn.net/qq_38232598/article/details/91346392",target:"_blank",rel:"noopener noreferrer"}},[n._v("此文"),s("OutboundLink")],1),n._v("。解决思路是编辑hosts文件，以绕过DNS污染。")]),n._v(" "),s("h1",{attrs:{id:"_4-技术分享"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-技术分享"}},[n._v("#")]),n._v(" 4. 技术分享")]),n._v(" "),s("p",[n._v("服务器运维过程中总会遇到磁盘占用过高，而要删除一些无关文件的情况，写了一些自动清理磁盘的shell脚本放在"),s("a",{attrs:{href:"https://github.com/yestolife/cleardata",target:"_blank",rel:"noopener noreferrer"}},[n._v("github"),s("OutboundLink")],1),n._v("上。")])])}),[],!1,null,null,null);e.default=a.exports}}]);